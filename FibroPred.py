import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

import config as cfg

import warnings

warnings.filterwarnings('ignore')

if 'data' not in st.session_state:
    data=pd.read_csv(cfg.INPUT_DATA, sep=';')
    data.to_csv(cfg.OUTPUT_DATA, index=False, sep=';')
    st.session_state['data'] = True

else:
    data=pd.read_csv(cfg.OUTPUT_DATA, sep=';')

st.set_page_config(
    page_title="FibroPred"
)


st.write("# üß¨Predictor pron√≤stic en fibrosi pulmonar (FibroPred)")
st.write("## Introducci√≥")


st.markdown(
    """
    La fibrosi pulmonar √©s una malaltia cr√≤nica que resulta de la mala reparaci√≥ del pulm√≥ 
    despr√©s de diferents tipus de lesions. Aquesta cicatriu al teixit pulmonar impedeix el 
    pas normal d'oxigen, causant retracci√≥, enduriment i progressiva insufici√®ncia respirat√≤ria. 
    Les malalties intersticials fibrosants, que inclouen la fibrosi pulmonar idiop√†tica i altres tipus, 
    presenten un curs cl√≠nic i resposta terap√®utica molt variable entre pacients. 
    A mesura que la malaltia avan√ßa, la qualitat de vida dels pacients es veu greument limitada, 
    i l'efecte dels tractaments antifibr√≤tics √©s imprevisible.
"""
)

st.write("## Objectiu")


st.markdown(
    """
    Desenvolupar un model predictiu (FibroPred) al diagn√≤stic per millorar la presa de decisions 
    terap√®utiques des de la primera visita, ajudant a predir la progressi√≥ de la malaltia en pacients 
    amb malalties pulmonars intersticials fibrosants.
"""
)


st.write("## Dades")


st.markdown(
    """
    A continuaci√≥ es mostren el conjunt de dades amb el que s'ha treballat, i algunes
    gr√†fiques que permeten una comprensi√≥ immediata dels factors que influeixen en la 
    progressi√≥ de la malaltia i ajudar√† en la presa de decisions terap√®utiques des del diagn√≤stic.
"""
)


st.write(data.head())


# Muertes por g√©nero

st.write("### Nombre de morts per g√®nere")

st.markdown(
    """
    Aqu√≠ es mostra la distribuci√≥ de les morts segons el g√®nere dels pacients. 
    Aquesta an√†lisi √©s essencial per entendre com el sexe pot influir en la mortalitat associada a la malaltia 
    i identificar possibles difer√®ncies en l'impacte de la fibrosi pulmonar.
"""

)



explode = (0, 0.1)  # solo "Saque" el 2do pedazo (ejem. 'cerdos')
death_counts = data.groupby('Sex')['Death'].sum()
# Crear la figura y ajustar su tama√±o
fig2, ax2 = plt.subplots(figsize=(14, 9))
# Gr√°fico de pie
ax2.pie(death_counts, labels=death_counts.index, autopct='%1.1f%%', shadow=True, startangle=0, explode=explode, colors=['Orange', None])
ax2.set_title('Distribuci√≥ de Morts per G√®nere')
# Mostrar el gr√°fico en Streamlit
st.pyplot(fig2)




# MUERTES POR RANGO DE EDADES



st.write("### Nombre de morts per rang d'edats")

st.markdown(
    """
    Altres dades importants a tenir en compte es la distribuci√≥ de les morts agrupades per rangs d'edat. 
    L'objectiu √©s visualitzar com varia la mortalitat en funci√≥ de l'edat i identificar les edats 
    amb un risc m√©s elevat de defunci√≥ a causa de la malaltia.
"""
)



# Filtrar solo las filas donde 'Death' es 1
deaths = data[data['Death'] == 1][cfg.AGE_COLUMN]

# Contar las ocurrencias de cada categor√≠a de edad
death_counts_by_age_range = deaths.value_counts(sort=False).sort_index()

# Crear el gr√°fico como un histograma manual
fig, ax = plt.subplots(figsize=(8, 5))

# Generar las barras con las posiciones ajustadas
x = range(len(death_counts_by_age_range))  # Posiciones de las barras
ax.bar(x, death_counts_by_age_range.values, edgecolor='black', alpha=0.7, width=0.8)

# Ajustar las etiquetas del eje x con los nombres de las categor√≠as
ax.set_xticks(x)
ax.set_xticklabels(death_counts_by_age_range.index, rotation=45)

# Configurar t√≠tulos y etiquetas
ax.set_xlabel("Rang d'edat")
ax.set_ylabel('Quantitat de Morts')
ax.set_title("Distribuci√≥ de Morts per rangs d'edat")

# Mostrar el gr√°fico en Streamlit
st.pyplot(fig)







st.write("### Nombre de morts segons tabaquisme")

st.markdown(
    """
    A continuaci√≥ es mostra un gr√†fic on s'analitza la relaci√≥ entre l'h√†bit de fumar i la mortalitat, 
    diferenciant entre fumadors, exfumadors i persones que mai han fumat. Aquesta informaci√≥ ajuda a avaluar 
    l'impacte del tabaquisme sobre la malaltia i la seva progressi√≥.
"""
)



# Configurar el tama√±o de las figuras
width = 7  # Ancho de la figura
height = 5  # Alto de la figura


# Reemplazar los valores numericos por etiquetas en 'TOBACCO' antes de graficar
data['TOBACCO'] = data['TOBACCO'].map({0: 'No fumador', 1: 'Fumador', 2: 'Exfumador'})

# Agrupar los datos por 'TOBACCO' para contar las muertes y los casos vivos
alive_counts_by_tobacco = data[data['Death'] == 0].groupby('TOBACCO').size()  # Vivos
death_counts_by_tobacco = data[data['Death'] == 1].groupby('TOBACCO').size()  # Muertes

# Convertir las series a DataFrames para hacer el gr√°fico apilado
df_alive = alive_counts_by_tobacco.reset_index(name='Vius')
df_deaths = death_counts_by_tobacco.reset_index(name='Morts')

# Ajustar los datos para el gr√°fico apilado
fig, ax = plt.subplots(figsize=(10, 6))



# Gr√°fico apilado para muertes y diagn√≥sticos
ax.bar(df_alive['TOBACCO'], df_alive['Vius'], color='blue', label='Vius', width=0.5, alpha=0.2)
ax.bar(df_deaths['TOBACCO'], df_deaths['Morts'], color='blue', label='Morts', width=0.5, bottom=0, alpha=0.7)



# Etiquetas y T√≠tulos
ax.set_xlabel('H√†bit de fumar')
ax.set_ylabel('N√∫mero')
ax.set_title('Distribuci√≥ de Morts i Vius segons l\'h√†bit de fumar')
ax.legend()



# Mostrar el gr√°fico en Streamlit
st.pyplot(fig)







